---
// interface Props {
//   animeData: Array<Object>;
// }

const { genre, animes } = Astro.props;
console.log(animes);
---

<section>
  <h2>{genre}</h2>
  <swiper-container
    class="mySwiper"
    space-between="30"
    pagination="true"
    pagination-clickable="true"
    navigation="true"
  >
    {
      animes.map((anime) => (
        <swiper-slide>
          {anime.title} <br /> {anime.synopsis}
        </swiper-slide>
      ))
    }
  </swiper-container>
</section>

<script
  src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-element-bundle.min.js"
></script>

<style>
  section {
    display: flex;
    flex-direction: column;
    place-items: center;
    padding-block: 3rem;
    position: relative;
    height: calc(100dvh - 4rem);
    scroll-snap-align: start;
    text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.519);
    background-color: var(--secondary);
  }

  swiper-container {
    max-width: 100%;
    flex-grow: 1;
  }

  swiper-slide {
    text-align: center;
    font-size: 18px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  swiper-slide img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  swiper-container::part(bullet-active) {
    background-color: var(--accent);
  }
  swiper-container::part(button-prev),
  swiper-container::part(button-next) {
    color: var(--accent);
    transition: all 0.25s ease;
  }
  swiper-container::part(button-prev):is(:hover, :focus),
  swiper-container::part(button-next):is(:hover, :focus) {
    color: white;
    scale: 1.1;
  }
</style>
